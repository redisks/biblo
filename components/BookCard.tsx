"use client";

import { Book } from "@/lib/models/Book";
import { Button } from "@/components/ui/button";
import {
  Card,
  CardContent,
  CardFooter,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import {
  AlertDialog,
  AlertDialogAction,
  AlertDialogCancel,
  AlertDialogContent,
  AlertDialogDescription,
  AlertDialogFooter,
  AlertDialogHeader,
  AlertDialogTitle,
} from "@/components/ui/alert-dialog";
import { BorrowForm } from "./BorrowForm";
import { useState } from "react";
import { toast } from "sonner";
import { useRouter } from "next/navigation";

interface BookCardProps {
  book: Book;
}

export function BookCard({ book }: BookCardProps) {
  const [showBorrowForm, setShowBorrowForm] = useState(false);
  const [loading, setLoading] = useState(false);
  const [showReturnDialog, setShowReturnDialog] = useState(false);
  const router = useRouter();

  const handleBorrowClick = async () => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∫–ª–∏–∫–µ
    const response = await fetch("/api/auth/user");
    if (response.ok) {
      const userData = await response.json();
      setShowBorrowForm(true);
    } else {
      router.push("/auth/login");
    }
  };

  const handleReturnClick = () => {
    setShowReturnDialog(true);
  };

  const handleReturnConfirm = async () => {
    setLoading(true);
    setShowReturnDialog(false);

    try {
      // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞
      const userResponse = await fetch("/api/auth/user");
      if (!userResponse.ok) {
        throw new Error("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω");
      }
      const user = await userResponse.json();

      // –°–Ω–∞—á–∞–ª–∞ –Ω–∞—Ö–æ–¥–∏–º –∑–∞–ø–∏—Å—å –æ –≤—ã–¥–∞—á–µ
      const borrowsResponse = await fetch(
        `/api/borrow?bookId=${book._id}&userId=${user._id}`
      );
      if (!borrowsResponse.ok) {
        throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∑–∞–ø–∏—Å—å –æ –≤—ã–¥–∞—á–µ");
      }

      const borrows = await borrowsResponse.json();
      const activeBorrow = borrows.find(
        (borrow: any) => borrow.status === "active"
      );

      if (!activeBorrow) {
        throw new Error("–ê–∫—Ç–∏–≤–Ω–∞—è –∑–∞–ø–∏—Å—å –æ –≤—ã–¥–∞—á–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞");
      }

      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–Ω–∏–≥—É
      const returnResponse = await fetch("/api/return", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ borrowId: activeBorrow._id }),
      });

      if (returnResponse.ok) {
        toast.success("–ö–Ω–∏–≥–∞ —É—Å–ø–µ—à–Ω–æ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞!");
        // –ü–ª–∞–≤–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        setTimeout(() => {
          router.refresh();
        }, 500);
      } else {
        const error = await returnResponse.json();
        toast.error(error.error || "–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –∫–Ω–∏–≥–∏");
      }
    } catch (error) {
      console.error("Return error:", error);
      toast.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –∫–Ω–∏–≥–∏");
    } finally {
      setLoading(false);
    }
  };

  const getButtonState = () => {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ book.isUserBook, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏—à–ª–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞
    if (book.isAvailable) {
      return {
        text: "–í–∑—è—Ç—å –∫–Ω–∏–≥—É",
        disabled: false,
        action: handleBorrowClick,
        variant: "default" as const,
      };
    }

    if (book.isUserBook) {
      return {
        text: loading ? "–í–æ–∑–≤—Ä–∞—Ç..." : "–í–µ—Ä–Ω—É—Ç—å –∫–Ω–∏–≥—É",
        disabled: loading,
        action: handleReturnClick,
        variant: "outline" as const,
      };
    }

    return {
      text: "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–∞",
      disabled: true,
      action: () => {},
      variant: "secondary" as const,
    };
  };

  const buttonState = getButtonState();

  return (
    <>
      <Card
        className={`w-full max-w-sm flex flex-col transition-all duration-300 hover:shadow-lg ${
          book.isUserBook ? "ring-2 ring-blue-200 bg-blue-50/50" : ""
        }`}
      >
        <CardHeader
          className={book.isUserBook ? "bg-blue-50/30 rounded-t-lg" : ""}
        >
          <CardTitle className="text-lg font-semibold line-clamp-2">
            {book.title}
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-2 flex-1">
          <div className="text-sm text-muted-foreground space-y-1">
            <p>
              <strong>–ê–≤—Ç–æ—Ä:</strong> {book.author || "–ù–µ —É–∫–∞–∑–∞–Ω"}
            </p>
            <p>
              <strong>–ò–∑–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ –∏ –≥–æ–¥:</strong>{" "}
              {book.publisher_year || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}
            </p>{" "}
            {/* –û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–µ –ø–æ–ª–µ */}
            <p>
              <strong>–†—É–±—Ä–∏–∫–∞:</strong> {book.category || "–ù–µ —É–∫–∞–∑–∞–Ω–∞"}
            </p>
            <p>
              <strong>–ú–µ—Å—Ç–æ:</strong> {book.location || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}
            </p>
          </div>
          <div className="flex gap-2 flex-wrap">
            <Badge variant={book.isAvailable ? "default" : "secondary"}>
              {book.isAvailable ? "–î–æ—Å—Ç—É–ø–Ω–∞" : "–í—ã–¥–∞–Ω–∞"}
            </Badge>
            {book.isUserBook && (
              <Badge
                variant="default"
                className="bg-green-500 hover:bg-green-600"
              >
                üìö –í–∞—à–∞ –∫–Ω–∏–≥–∞
              </Badge>
            )}
          </div>
        </CardContent>
        <CardFooter>
          <Button
            onClick={buttonState.action}
            disabled={buttonState.disabled}
            className="w-full transition-all duration-200"
            variant={buttonState.variant}
            size="lg"
          >
            {buttonState.text}
          </Button>
        </CardFooter>
      </Card>

      {/* –î–∏–∞–ª–æ–≥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞ */}
      <AlertDialog open={showReturnDialog} onOpenChange={setShowReturnDialog}>
        <AlertDialogContent>
          <AlertDialogHeader>
            <AlertDialogTitle>–í–æ–∑–≤—Ä–∞—Ç –∫–Ω–∏–≥–∏</AlertDialogTitle>
            <AlertDialogDescription>
              –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å –∫–Ω–∏–≥—É &quot;{book.title}&quot;?
              –ü–æ—Å–ª–µ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫–Ω–∏–≥–∞ —Å—Ç–∞–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –¥—Ä—É–≥–∏—Ö —á–∏—Ç–∞—Ç–µ–ª–µ–π.
            </AlertDialogDescription>
          </AlertDialogHeader>
          <AlertDialogFooter>
            <AlertDialogCancel disabled={loading}>–û—Ç–º–µ–Ω–∞</AlertDialogCancel>
            <AlertDialogAction onClick={handleReturnConfirm} disabled={loading}>
              {loading ? "–í–æ–∑–≤—Ä–∞—Ç..." : "–í–µ—Ä–Ω—É—Ç—å –∫–Ω–∏–≥—É"}
            </AlertDialogAction>
          </AlertDialogFooter>
        </AlertDialogContent>
      </AlertDialog>

      {showBorrowForm && (
        <BorrowForm book={book} onClose={() => setShowBorrowForm(false)} />
      )}
    </>
  );
}
